version: "3"

services:
  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - .data/:/var/lib/postgresql/
    restart: always
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -p $DB_PORT -d ${DB_NAME}"]
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - frcp
    env_file:
      - .env

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:management-alpine
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - frcp
    env_file:
      - .env

  worker:
    container_name: worker
    build: .
    command: celery -A app.main.celery worker --loglevel=info
    depends_on:
      rabbitmq:
          condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    volumes:
      - .:/app
    networks:
      - frcp
    env_file:
      - .env

  fastapi:
    container_name: fastapi
    build: .
    volumes:
      - .:/app
    ports:
      - "${FASTAPI_PORT}:8000"
    networks:
      - frcp
    env_file:
      - .env
    command: sh -c "uvicorn app.main:app --host ${FASTAPI_HOST} --port ${FASTAPI_PORT} --reload"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
    - postgres
    env_file:
      - .env
    networks:
      - frcp


networks:
  frcp:
    external: true

